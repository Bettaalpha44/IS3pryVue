{"ast":null,"code":"import { defineComponent, useAttrs, openBlock, createElementBlock, mergeProps, unref, createBlock, resolveDynamicComponent, computed, createElementVNode, renderSlot, normalizeClass, withCtx, createTextVNode, toDisplayString, inject } from \"vue\";\nimport { u as useDefaults } from \"./useDefaults-dJMhLizZ.mjs\";\nimport { u as useColorVariantClasses } from \"./useColorVariantClasses-ZDE19TZw.mjs\";\nimport { _ as _sfc_main$7 } from \"./BLink.vue_vue_type_script_setup_true_lang-BB8hwqOG.mjs\";\nimport { u as useBLinkHelper } from \"./useBLinkHelper-Bvtov_sk.mjs\";\nimport { c as collapseInjectionKey, v as dropdownInjectionKey, n as navbarInjectionKey } from \"./keys-CsqIkltC.mjs\";\nconst _sfc_main$6 = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BDropdownDivider\",\n  props: {\n    dividerClass: {\n      default: void 0\n    },\n    tag: {\n      default: \"hr\"\n    },\n    variant: {},\n    wrapperAttrs: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const {\n      class: wrapperClass,\n      ...attrs\n    } = useAttrs();\n    const _props = __props;\n    const props = useDefaults(_props, \"BDropdownDivider\");\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"li\", mergeProps({\n        role: \"presentation\",\n        class: unref(wrapperClass)\n      }, _ctx.wrapperAttrs), [(openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), mergeProps({\n        class: [\"dropdown-divider\", unref(props).dividerClass],\n        role: \"separator\",\n        \"aria-orientation\": \"horizontal\"\n      }, attrs), null, 16, [\"class\"]))], 16);\n    };\n  }\n});\nconst _hoisted_1$2 = [\"novalidate\"];\nconst _sfc_main$5 = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BDropdownForm\",\n  props: {\n    formClass: {\n      default: void 0\n    },\n    novalidate: {\n      type: Boolean,\n      default: void 0\n    },\n    validated: {\n      type: Boolean,\n      default: void 0\n    },\n    wrapperAttrs: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const {\n      class: wrapperClass,\n      ...attrs\n    } = useAttrs();\n    const _props = __props;\n    const props = useDefaults(_props, \"BDropdownForm\");\n    const computedClasses = computed(() => ({\n      \"was-validated\": props.validated,\n      ...props.formClass\n    }));\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"li\", mergeProps({\n        role: \"presentation\",\n        class: unref(wrapperClass)\n      }, unref(props).wrapperAttrs), [createElementVNode(\"form\", mergeProps({\n        class: [\"dropdown-item-text\", computedClasses.value],\n        novalidate: unref(props).novalidate\n      }, attrs), [renderSlot(_ctx.$slots, \"default\")], 16, _hoisted_1$2)], 16);\n    };\n  }\n});\nconst _hoisted_1$1 = {\n  role: \"presentation\"\n};\nconst _hoisted_2 = [\"id\", \"aria-describedby\"];\nconst _sfc_main$4 = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BDropdownGroup\",\n  props: {\n    ariaDescribedby: {\n      default: void 0\n    },\n    header: {\n      default: void 0\n    },\n    headerClass: {\n      default: void 0\n    },\n    headerTag: {\n      default: \"header\"\n    },\n    headerVariant: {\n      default: null\n    },\n    id: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BDropdownGroup\");\n    const headerId = computed(() => props.id ? `${props.id}_group_dd_header` : void 0);\n    const headerRole = computed(() => props.headerTag === \"header\" ? void 0 : \"heading\");\n    const colorClasses = useColorVariantClasses(computed(() => ({\n      textVariant: props.headerVariant\n    })));\n    const computedClasses = computed(() => [props.headerClass, colorClasses.value]);\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"li\", _hoisted_1$1, [(openBlock(), createBlock(resolveDynamicComponent(unref(props).headerTag), {\n        id: headerId.value,\n        class: normalizeClass([\"dropdown-header\", computedClasses.value]),\n        role: headerRole.value\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"header\", {}, () => [createTextVNode(toDisplayString(unref(props).header), 1)])]),\n        _: 3\n      }, 8, [\"id\", \"class\", \"role\"])), createElementVNode(\"ul\", mergeProps({\n        id: unref(props).id,\n        role: \"group\",\n        class: \"list-unstyled\"\n      }, _ctx.$attrs, {\n        \"aria-describedby\": unref(props).ariaDescribedby || headerId.value\n      }), [renderSlot(_ctx.$slots, \"default\")], 16, _hoisted_2)]);\n    };\n  }\n});\nconst _sfc_main$3 = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BDropdownHeader\",\n  props: {\n    headerClass: {\n      default: void 0\n    },\n    tag: {\n      default: \"h6\"\n    },\n    text: {\n      default: void 0\n    },\n    variant: {\n      default: null\n    },\n    wrapperAttrs: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const {\n      class: wrapperClass,\n      ...attrs\n    } = useAttrs();\n    const _props = __props;\n    const props = useDefaults(_props, \"BDropdownHeader\");\n    const colorClasses = useColorVariantClasses(computed(() => ({\n      textVariant: props.variant\n    })));\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"li\", mergeProps({\n        role: \"presentation\",\n        class: unref(wrapperClass)\n      }, _ctx.wrapperAttrs), [(openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), mergeProps({\n        class: [\"dropdown-header\", [unref(colorClasses), unref(props).headerClass]]\n      }, attrs), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      }, 16, [\"class\"]))], 16);\n    };\n  }\n});\nconst _sfc_main$2 = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BDropdownItem\",\n  props: {\n    linkClass: {\n      default: void 0\n    },\n    wrapperAttrs: {\n      default: void 0\n    },\n    active: {\n      type: Boolean,\n      default: void 0\n    },\n    activeClass: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: void 0\n    },\n    exactActiveClass: {\n      default: void 0\n    },\n    href: {\n      default: void 0\n    },\n    icon: {\n      type: Boolean,\n      default: void 0\n    },\n    noRel: {\n      type: Boolean\n    },\n    opacity: {\n      default: void 0\n    },\n    opacityHover: {\n      default: void 0\n    },\n    rel: {\n      default: void 0\n    },\n    replace: {\n      type: Boolean,\n      default: void 0\n    },\n    routerComponentName: {\n      default: void 0\n    },\n    stretched: {\n      type: Boolean,\n      default: false\n    },\n    target: {\n      default: void 0\n    },\n    to: {\n      default: void 0\n    },\n    underlineOffset: {\n      default: void 0\n    },\n    underlineOffsetHover: {\n      default: void 0\n    },\n    underlineOpacity: {\n      default: void 0\n    },\n    underlineOpacityHover: {\n      default: void 0\n    },\n    underlineVariant: {\n      default: void 0\n    },\n    variant: {\n      default: null\n    }\n  },\n  emits: [\"click\"],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BDropdownItem\");\n    const emit = __emit;\n    const {\n      class: wrapperClass,\n      ...attrs\n    } = useAttrs();\n    const {\n      computedLink,\n      computedLinkProps\n    } = useBLinkHelper(props);\n    const colorClasses = useColorVariantClasses(computed(() => ({\n      textVariant: props.variant\n    })));\n    const computedClasses = computed(() => [props.linkClass, colorClasses.value, {\n      active: props.active,\n      disabled: props.disabled\n    }]);\n    const computedTag = computed(() => computedLink.value ? _sfc_main$7 : props.href ? \"a\" : \"button\");\n    const collapseData = inject(collapseInjectionKey, null);\n    const dropdownData = inject(dropdownInjectionKey, null);\n    const navbarData = inject(navbarInjectionKey, null);\n    const clicked = e => {\n      var _a, _b, _c;\n      emit(\"click\", e);\n      if (navbarData !== null && ((_a = navbarData == null ? void 0 : navbarData.autoClose) == null ? void 0 : _a.value) === true) {\n        (_b = collapseData == null ? void 0 : collapseData.hide) == null ? void 0 : _b.call(collapseData);\n      }\n      (_c = dropdownData == null ? void 0 : dropdownData.hide) == null ? void 0 : _c.call(dropdownData);\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"li\", mergeProps({\n        role: \"presentation\",\n        class: unref(wrapperClass)\n      }, unref(props).wrapperAttrs), [(openBlock(), createBlock(resolveDynamicComponent(computedTag.value), mergeProps({\n        class: [\"dropdown-item\", computedClasses.value],\n        disabled: unref(props).disabled,\n        \"aria-disabled\": unref(props).disabled ? true : null,\n        \"aria-current\": unref(props).active ? true : null,\n        href: computedTag.value === \"a\" ? unref(props).href : null,\n        rel: unref(props).rel,\n        role: \"menuitem\",\n        type: computedTag.value === \"button\" ? \"button\" : null,\n        target: unref(props).target\n      }, {\n        ...unref(computedLinkProps),\n        ...attrs\n      }, {\n        onClick: clicked\n      }), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 16, [\"class\", \"disabled\", \"aria-disabled\", \"aria-current\", \"href\", \"rel\", \"type\", \"target\"]))], 16);\n    };\n  }\n});\nconst _hoisted_1 = [\"disabled\"];\nconst _sfc_main$1 = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BDropdownItemButton\",\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    activeClass: {\n      default: \"active\"\n    },\n    buttonClass: {\n      default: void 0\n    },\n    wrapperAttrs: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    variant: {\n      default: null\n    }\n  },\n  emits: [\"click\"],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BDropdownItemButton\");\n    const emit = __emit;\n    const {\n      class: wrapperClass,\n      ...attrs\n    } = useAttrs();\n    const colorClasses = useColorVariantClasses(computed(() => ({\n      textVariant: props.variant\n    })));\n    const computedClasses = computed(() => [props.buttonClass, colorClasses.value, {\n      [props.activeClass]: props.active,\n      disabled: props.disabled\n    }]);\n    const clicked = e => {\n      emit(\"click\", e);\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"li\", mergeProps({\n        role: \"presentation\",\n        class: unref(wrapperClass)\n      }, unref(props).wrapperAttrs), [createElementVNode(\"button\", mergeProps({\n        role: \"menu\",\n        type: \"button\",\n        class: [\"dropdown-item\", computedClasses.value],\n        disabled: unref(props).disabled\n      }, attrs, {\n        onClick: clicked\n      }), [renderSlot(_ctx.$slots, \"default\")], 16, _hoisted_1)], 16);\n    };\n  }\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BDropdownText\",\n  props: {\n    textClass: {\n      default: void 0\n    },\n    tag: {\n      default: \"span\"\n    },\n    text: {\n      default: void 0\n    },\n    variant: {\n      default: null\n    },\n    wrapperAttrs: {\n      default: void 0\n    }\n  },\n  setup(__props) {\n    const {\n      class: wrapperClass,\n      ...attrs\n    } = useAttrs();\n    const _props = __props;\n    const props = useDefaults(_props, \"BDropdownText\");\n    const colorClasses = useColorVariantClasses(computed(() => ({\n      textVariant: props.variant\n    })));\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"li\", mergeProps({\n        role: \"presentation\",\n        class: unref(wrapperClass)\n      }, _ctx.wrapperAttrs), [(openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), mergeProps({\n        class: [\"dropdown-item-text\", [unref(colorClasses), unref(props).textClass]]\n      }, attrs), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)])]),\n        _: 3\n      }, 16, [\"class\"]))], 16);\n    };\n  }\n});\nexport { _sfc_main$6 as _, _sfc_main$5 as a, _sfc_main$4 as b, _sfc_main$3 as c, _sfc_main$2 as d, _sfc_main$1 as e, _sfc_main as f };","map":{"version":3,"names":["class","wrapperClass","attrs","useAttrs","_props","__props","props","useDefaults","computedClasses","computed","validated","formClass","headerId","id","headerRole","headerTag","colorClasses","useColorVariantClasses","textVariant","headerVariant","headerClass","value","variant","emit","__emit","computedLink","computedLinkProps","useBLinkHelper","linkClass","active","disabled","computedTag","_sfc_main$7","href","collapseData","inject","collapseInjectionKey","dropdownData","dropdownInjectionKey","navbarData","navbarInjectionKey","clicked","e","_a","autoClose","_b","hide","call","_c","buttonClass","activeClass"],"sources":["../src/components/BDropdown/BDropdownDivider.vue","../src/components/BDropdown/BDropdownForm.vue","../src/components/BDropdown/BDropdownGroup.vue","../src/components/BDropdown/BDropdownHeader.vue","../src/components/BDropdown/BDropdownItem.vue","../src/components/BDropdown/BDropdownItemButton.vue","../src/components/BDropdown/BDropdownText.vue"],"sourcesContent":["<template>\n  <li role=\"presentation\" :class=\"wrapperClass\" v-bind=\"wrapperAttrs\">\n    <component\n      :is=\"props.tag\"\n      class=\"dropdown-divider\"\n      :class=\"props.dividerClass\"\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      v-bind=\"attrs\"\n    />\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport {useAttrs} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BDropdownDividerProps} from '../../types/ComponentProps'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst {class: wrapperClass, ...attrs} = useAttrs()\n\nconst _props = withDefaults(defineProps<BDropdownDividerProps>(), {\n  dividerClass: undefined,\n  tag: 'hr',\n  wrapperAttrs: undefined,\n})\nconst props = useDefaults(_props, 'BDropdownDivider')\n</script>\n","<template>\n  <li role=\"presentation\" :class=\"wrapperClass\" v-bind=\"props.wrapperAttrs\">\n    <form\n      class=\"dropdown-item-text\"\n      :class=\"computedClasses\"\n      :novalidate=\"props.novalidate\"\n      v-bind=\"attrs\"\n    >\n      <slot />\n    </form>\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useAttrs} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BDropdownFormProps} from '../../types/ComponentProps'\n\ndefineOptions({\n  inheritAttrs: false,\n})\nconst {class: wrapperClass, ...attrs} = useAttrs()\n\nconst _props = withDefaults(defineProps<BDropdownFormProps>(), {\n  formClass: undefined,\n  novalidate: undefined,\n  validated: undefined,\n  wrapperAttrs: undefined,\n})\nconst props = useDefaults(_props, 'BDropdownForm')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedClasses = computed(() => ({\n  'was-validated': props.validated,\n  ...props.formClass,\n}))\n</script>\n","<template>\n  <li role=\"presentation\">\n    <component\n      :is=\"props.headerTag\"\n      :id=\"headerId\"\n      class=\"dropdown-header\"\n      :class=\"computedClasses\"\n      :role=\"headerRole\"\n    >\n      <slot name=\"header\">\n        {{ props.header }}\n      </slot>\n    </component>\n    <ul\n      :id=\"props.id\"\n      role=\"group\"\n      class=\"list-unstyled\"\n      v-bind=\"$attrs\"\n      :aria-describedby=\"props.ariaDescribedby || headerId\"\n    >\n      <slot />\n    </ul>\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BDropdownGroupProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BDropdownGroupProps>(), {\n  ariaDescribedby: undefined,\n  header: undefined,\n  headerClass: undefined,\n  headerTag: 'header',\n  headerVariant: null,\n  id: undefined,\n})\nconst props = useDefaults(_props, 'BDropdownGroup')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  header?: (props: Record<string, never>) => any\n}>()\n\nconst headerId = computed(() => (props.id ? `${props.id}_group_dd_header` : undefined))\nconst headerRole = computed(() => (props.headerTag === 'header' ? undefined : 'heading'))\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    textVariant: props.headerVariant,\n  }))\n)\nconst computedClasses = computed(() => [props.headerClass, colorClasses.value])\n</script>\n","<template>\n  <li role=\"presentation\" :class=\"wrapperClass\" v-bind=\"wrapperAttrs\">\n    <component\n      :is=\"props.tag\"\n      class=\"dropdown-header\"\n      :class=\"[colorClasses, props.headerClass]\"\n      v-bind=\"attrs\"\n    >\n      <slot>\n        {{ props.text }}\n      </slot>\n    </component>\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useAttrs} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BDropdownHeaderProps} from '../../types/ComponentProps'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\ndefineOptions({\n  inheritAttrs: false,\n})\nconst {class: wrapperClass, ...attrs} = useAttrs()\n\nconst _props = withDefaults(defineProps<BDropdownHeaderProps>(), {\n  headerClass: undefined,\n  tag: 'h6',\n  text: undefined,\n  variant: null,\n  wrapperAttrs: undefined,\n})\nconst props = useDefaults(_props, 'BDropdownHeader')\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    textVariant: props.variant,\n  }))\n)\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n</script>\n","<template>\n  <li role=\"presentation\" :class=\"wrapperClass\" v-bind=\"props.wrapperAttrs\">\n    <component\n      :is=\"computedTag\"\n      class=\"dropdown-item\"\n      :class=\"computedClasses\"\n      :disabled=\"props.disabled\"\n      :aria-disabled=\"props.disabled ? true : null\"\n      :aria-current=\"props.active ? true : null\"\n      :href=\"computedTag === 'a' ? props.href : null\"\n      :rel=\"props.rel\"\n      role=\"menuitem\"\n      :type=\"computedTag === 'button' ? 'button' : null\"\n      :target=\"props.target\"\n      v-bind=\"{...computedLinkProps, ...attrs}\"\n      @click=\"clicked\"\n    >\n      <slot />\n    </component>\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport BLink from '../BLink/BLink.vue'\nimport {computed, inject, useAttrs} from 'vue'\nimport type {BDropdownItemProps} from '../../types/ComponentProps'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport {collapseInjectionKey, dropdownInjectionKey, navbarInjectionKey} from '../../utils/keys'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BDropdownItemProps>(), {\n  wrapperAttrs: undefined,\n  // Link props\n  linkClass: undefined,\n  variant: null,\n  // All others use defaults\n  active: undefined,\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  href: undefined,\n  icon: undefined,\n  opacity: undefined,\n  stretched: false,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: undefined,\n  // End link props\n})\nconst props = useDefaults(_props, 'BDropdownItem')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\nconst {class: wrapperClass, ...attrs} = useAttrs()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props)\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    textVariant: props.variant,\n  }))\n)\nconst computedClasses = computed(() => [\n  props.linkClass,\n  colorClasses.value,\n  {\n    active: props.active,\n    disabled: props.disabled,\n  },\n])\n\nconst computedTag = computed(() => (computedLink.value ? BLink : props.href ? 'a' : 'button'))\n\nconst collapseData = inject(collapseInjectionKey, null)\nconst dropdownData = inject(dropdownInjectionKey, null)\nconst navbarData = inject(navbarInjectionKey, null)\n\n// Pretty sure this emits if computedTag is not button and is disabled\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  emit('click', e)\n  if (navbarData !== null && navbarData?.autoClose?.value === true) {\n    collapseData?.hide?.()\n  }\n  dropdownData?.hide?.()\n}\n</script>\n","<template>\n  <li role=\"presentation\" :class=\"wrapperClass\" v-bind=\"props.wrapperAttrs\">\n    <button\n      role=\"menu\"\n      type=\"button\"\n      class=\"dropdown-item\"\n      :class=\"computedClasses\"\n      :disabled=\"props.disabled\"\n      v-bind=\"attrs\"\n      @click=\"clicked\"\n    >\n      <slot />\n    </button>\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BDropdownItemButtonProps} from '../../types/ComponentProps'\nimport {computed, useAttrs} from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BDropdownItemButtonProps>(), {\n  active: false,\n  activeClass: 'active',\n  buttonClass: undefined,\n  disabled: false,\n  variant: null,\n  wrapperAttrs: undefined,\n})\nconst props = useDefaults(_props, 'BDropdownItemButton')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\nconst {class: wrapperClass, ...attrs} = useAttrs()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    textVariant: props.variant,\n  }))\n)\nconst computedClasses = computed(() => [\n  props.buttonClass,\n  colorClasses.value,\n  {\n    [props.activeClass]: props.active,\n    disabled: props.disabled,\n  },\n])\n\nconst clicked = (e: Readonly<MouseEvent>) => {\n  emit('click', e)\n}\n</script>\n","<template>\n  <li role=\"presentation\" :class=\"wrapperClass\" v-bind=\"wrapperAttrs\">\n    <component\n      :is=\"props.tag\"\n      class=\"dropdown-item-text\"\n      :class=\"[colorClasses, props.textClass]\"\n      v-bind=\"attrs\"\n    >\n      <slot>\n        {{ props.text }}\n      </slot>\n    </component>\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useAttrs} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BDropdownTextProps} from '../../types/ComponentProps'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\ndefineOptions({\n  inheritAttrs: false,\n})\nconst {class: wrapperClass, ...attrs} = useAttrs()\n\nconst _props = withDefaults(defineProps<BDropdownTextProps>(), {\n  textClass: undefined,\n  tag: 'span',\n  text: undefined,\n  variant: null,\n  wrapperAttrs: undefined,\n})\nconst props = useDefaults(_props, 'BDropdownText')\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    textVariant: props.variant,\n  }))\n)\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}