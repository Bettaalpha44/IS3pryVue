{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, mergeModels, useModel, inject, computed, ref, toRef, watch, provide, openBlock, createBlock, unref, normalizeClass, withCtx, createVNode, renderSlot, createTextVNode, toDisplayString, createElementVNode, createCommentVNode, Transition, mergeProps, withDirectives, normalizeStyle, vShow, nextTick } from \"vue\";\nimport { i as isBoundary, d as isRootBoundary, f as flip, s as shift, e as size, g as useFloating, h as autoUpdate, o as offset } from \"./floatingUi-CaHdWUtW.mjs\";\nimport { o as onKeyStroke, k as onClickOutside } from \"./index-BgXbxfV9.mjs\";\nimport { u as useDefaults } from \"./useDefaults-dJMhLizZ.mjs\";\nimport { u as useId } from \"./useId-BR0P33VS.mjs\";\nimport { _ as _sfc_main$2 } from \"./BButton.vue_vue_type_script_setup_true_lang-jzwMHPCL.mjs\";\nimport { _ as _sfc_main$1 } from \"./ConditionalWrapper.vue_vue_type_script_lang-CUX3HBqw.mjs\";\nimport { _ as _sfc_main$3 } from \"./ConditionalTeleport.vue_vue_type_script_lang-2PJ2jBTg.mjs\";\nimport { g as getElement } from \"./getElement-D_JPfLJS.mjs\";\nimport { l as inputGroupKey, h as buttonGroupKey, v as dropdownInjectionKey } from \"./keys-CsqIkltC.mjs\";\nimport { u as useShowHide } from \"./useShowHide-gK6_viwB.mjs\";\nimport { u as useToNumber } from \"./index-dpbv1toz.mjs\";\nimport { _ as _export_sfc } from \"./_plugin-vue_export-helper-1tPrXgE0.mjs\";\nconst _hoisted_1 = {\n  class: \"visually-hidden\"\n};\nconst _hoisted_2 = [\"id\", \"aria-labelledby\", \"role\"];\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"BDropdown\",\n  props: /* @__PURE__ */mergeModels({\n    ariaLabel: {\n      default: void 0\n    },\n    autoClose: {\n      type: [Boolean, String],\n      default: true\n    },\n    boundary: {\n      default: \"clippingAncestors\"\n    },\n    boundaryPadding: {\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    floatingMiddleware: {\n      default: void 0\n    },\n    id: {\n      default: void 0\n    },\n    isNav: {\n      type: Boolean,\n      default: false\n    },\n    menuClass: {\n      default: void 0\n    },\n    noCaret: {\n      type: Boolean,\n      default: false\n    },\n    noFlip: {\n      type: Boolean,\n      default: false\n    },\n    noShift: {\n      type: Boolean,\n      default: false\n    },\n    noSize: {\n      type: Boolean,\n      default: false\n    },\n    offset: {\n      default: 0\n    },\n    role: {\n      default: \"menu\"\n    },\n    size: {\n      default: \"md\"\n    },\n    noWrapper: {\n      type: Boolean,\n      default: false\n    },\n    split: {\n      type: Boolean,\n      default: false\n    },\n    splitButtonType: {\n      default: \"button\"\n    },\n    splitClass: {\n      default: void 0\n    },\n    splitDisabled: {\n      type: Boolean,\n      default: void 0\n    },\n    splitHref: {\n      default: void 0\n    },\n    splitTo: {\n      default: void 0\n    },\n    splitVariant: {\n      default: void 0\n    },\n    strategy: {\n      default: \"absolute\"\n    },\n    text: {\n      default: void 0\n    },\n    toggleClass: {\n      default: void 0\n    },\n    toggleText: {\n      default: \"Toggle dropdown\"\n    },\n    variant: {\n      default: \"secondary\"\n    },\n    wrapperClass: {\n      default: void 0\n    },\n    placement: {\n      default: \"bottom-start\"\n    },\n    teleportDisabled: {\n      type: Boolean,\n      default: false\n    },\n    teleportTo: {\n      default: void 0\n    },\n    initialAnimation: {\n      type: Boolean,\n      default: false\n    },\n    noAnimation: {\n      type: Boolean\n    },\n    noFade: {\n      type: Boolean,\n      default: false\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    unmountLazy: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    transProps: {\n      default: void 0\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  }, {\n    \"modelValue\": {\n      type: Boolean,\n      ...{\n        default: false\n      }\n    },\n    \"modelModifiers\": {}\n  }),\n  emits: /* @__PURE__ */mergeModels([\"click\", \"hidden\", \"hide\", \"hide-prevented\", \"show\", \"show-prevented\", \"shown\", \"toggle\", \"toggle-prevented\"], [\"update:modelValue\"]),\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const _props = __props;\n    const props = useDefaults(_props, \"BDropdown\");\n    const emit = __emit;\n    const computedId = useId(() => props.id, \"dropdown\");\n    const modelValue = useModel(__props, \"modelValue\");\n    const inInputGroup = inject(inputGroupKey, false);\n    const inButtonGroup = inject(buttonGroupKey, false);\n    const computedOffset = computed(() => typeof props.offset === \"string\" || typeof props.offset === \"number\" ? props.offset : NaN);\n    const offsetToNumber = useToNumber(computedOffset);\n    const floating = ref(null);\n    const button = ref(null);\n    const splitButton = ref(null);\n    const wrapper = ref(null);\n    const boundary = computed(() => isBoundary(props.boundary) ? props.boundary : void 0);\n    const rootBoundary = computed(() => isRootBoundary(props.boundary) ? props.boundary : void 0);\n    const referencePlacement = computed(() => !props.split ? splitButton.value : button.value);\n    const {\n      showRef,\n      renderRef,\n      hide,\n      show,\n      toggle,\n      computedNoAnimation,\n      transitionProps,\n      contentShowing,\n      isVisible\n    } = useShowHide(modelValue, props, emit, referencePlacement, computedId);\n    const computedMenuClasses = computed(() => [{\n      show: isVisible.value,\n      fade: !computedNoAnimation.value\n    }]);\n    onKeyStroke(\"Escape\", () => {\n      var _a;\n      hide();\n      (_a = getElement(referencePlacement.value)) == null ? void 0 : _a.focus();\n    }, {\n      target: referencePlacement\n    });\n    onKeyStroke(\"Escape\", () => {\n      var _a;\n      hide();\n      (_a = getElement(referencePlacement.value)) == null ? void 0 : _a.focus();\n    }, {\n      target: floating\n    });\n    const keynav = (e, v) => {\n      var _a, _b, _c, _d, _e, _f, _g;\n      if ((_b = floating.value) == null ? void 0 : _b.contains((_a = e.target) == null ? void 0 : _a.closest(\"form\"))) return;\n      if (/input|select|option|textarea|form/i.test((_c = e.target) == null ? void 0 : _c.tagName)) return;\n      e.preventDefault();\n      if (!showRef.value) {\n        show();\n        const loop = setInterval(() => {\n          if (isVisible.value) {\n            clearInterval(loop);\n            nextTick(() => keynav(e, v));\n          }\n        }, 16);\n        return;\n      }\n      const list = (_d = floating.value) == null ? void 0 : _d.querySelectorAll(\".dropdown-item:not(.disabled):not(:disabled)\");\n      if (!list) return;\n      if ((_e = floating.value) == null ? void 0 : _e.contains(document.activeElement)) {\n        const active = floating.value.querySelector(\".dropdown-item:focus\");\n        const index = Array.prototype.indexOf.call(list, active) + v;\n        if (index >= 0 && index < (list == null ? void 0 : list.length)) (_f = list[index]) == null ? void 0 : _f.focus();\n      } else {\n        (_g = list[v === -1 ? list.length - 1 : 0]) == null ? void 0 : _g.focus();\n      }\n    };\n    onKeyStroke(\"ArrowUp\", e => keynav(e, -1), {\n      target: referencePlacement\n    });\n    onKeyStroke(\"ArrowDown\", e => keynav(e, 1), {\n      target: referencePlacement\n    });\n    onKeyStroke(\"ArrowUp\", e => keynav(e, -1), {\n      target: floating\n    });\n    onKeyStroke(\"ArrowDown\", e => keynav(e, 1), {\n      target: floating\n    });\n    const sizeStyles = ref({});\n    const floatingMiddleware = computed(() => {\n      if (props.floatingMiddleware !== void 0) {\n        return props.floatingMiddleware;\n      }\n      const localOffset = typeof props.offset === \"string\" || typeof props.offset === \"number\" ? offsetToNumber.value : props.offset;\n      const arr = [offset(localOffset)];\n      if (props.noFlip === false) {\n        arr.push(flip({\n          boundary: boundary.value,\n          rootBoundary: rootBoundary.value,\n          padding: props.boundaryPadding\n        }));\n      }\n      if (props.noShift === false) {\n        arr.push(shift({\n          boundary: boundary.value,\n          rootBoundary: rootBoundary.value,\n          padding: props.boundaryPadding\n        }));\n      }\n      if (props.noSize === false) {\n        arr.push(size({\n          boundary: boundary.value,\n          rootBoundary: rootBoundary.value,\n          padding: props.boundaryPadding,\n          apply({\n            availableWidth,\n            availableHeight\n          }) {\n            var _a, _b;\n            sizeStyles.value = {\n              maxHeight: availableHeight >= (((_a = floating.value) == null ? void 0 : _a.scrollHeight) ?? 0) ? void 0 : availableHeight ? `${Math.max(0, availableHeight)}px` : void 0,\n              maxWidth: availableWidth >= (((_b = floating.value) == null ? void 0 : _b.scrollWidth) ?? 0) ? void 0 : availableWidth ? `${Math.max(0, availableWidth)}px` : void 0\n            };\n          }\n        }));\n      }\n      return arr;\n    });\n    const {\n      update,\n      floatingStyles\n    } = useFloating(referencePlacement, floating, {\n      placement: () => props.placement,\n      middleware: floatingMiddleware,\n      strategy: toRef(() => props.strategy),\n      whileElementsMounted: autoUpdate\n    });\n    const inButtonGroupAttributes = inButtonGroup ? {\n      class: \"btn-group\",\n      role: \"group\"\n    } : void 0;\n    const computedClasses = computed(() => [inButtonGroupAttributes == null ? void 0 : inButtonGroupAttributes.class, props.wrapperClass, {\n      \"btn-group\": !props.wrapperClass && props.split,\n      \"dropdown\": !props.wrapperClass && !props.split,\n      \"position-static\": props.boundary !== \"clippingAncestors\" && !props.isNav\n    }]);\n    const buttonClasses = computed(() => [props.split ? props.splitClass : props.toggleClass, {\n      \"nav-link\": props.isNav,\n      \"dropdown-toggle\": !props.split,\n      \"dropdown-toggle-no-caret\": props.noCaret && !props.split,\n      \"show\": props.split ? void 0 : showRef.value\n    }]);\n    const onButtonClick = () => {\n      toggle();\n    };\n    const onSplitClick = event => {\n      if (props.split) {\n        emit(\"click\", event);\n        return;\n      }\n      onButtonClick();\n    };\n    onClickOutside(floating, () => {\n      if (showRef.value && (props.autoClose === true || props.autoClose === \"outside\")) {\n        hide();\n      }\n    }, {\n      ignore: [button, splitButton]\n    });\n    const onClickInside = () => {\n      if (showRef.value && (props.autoClose === true || props.autoClose === \"inside\")) {\n        hide();\n      }\n    };\n    watch(isVisible, () => {\n      update();\n    });\n    __expose({\n      hide,\n      show,\n      toggle\n    });\n    provide(dropdownInjectionKey, {\n      id: computedId,\n      show,\n      hide,\n      toggle,\n      visible: toRef(() => showRef.value),\n      isNav: toRef(() => props.isNav)\n    });\n    return (_ctx, _cache) => {\n      var _a;\n      return openBlock(), createBlock(_sfc_main$1, {\n        ref_key: \"wrapper\",\n        ref: wrapper,\n        skip: unref(inInputGroup) || unref(props).noWrapper,\n        class: normalizeClass(computedClasses.value),\n        role: (_a = unref(inButtonGroupAttributes)) == null ? void 0 : _a.role\n      }, {\n        default: withCtx(() => [createVNode(_sfc_main$2, {\n          id: unref(computedId),\n          ref_key: \"splitButton\",\n          ref: splitButton,\n          variant: unref(props).splitVariant || unref(props).variant,\n          size: unref(props).size,\n          class: normalizeClass(buttonClasses.value),\n          disabled: unref(props).splitDisabled || unref(props).disabled,\n          type: unref(props).splitButtonType,\n          \"aria-label\": unref(props).ariaLabel,\n          \"aria-expanded\": unref(props).split ? void 0 : unref(showRef),\n          \"aria-haspopup\": unref(props).split ? void 0 : \"menu\",\n          href: unref(props).split ? unref(props).splitHref : void 0,\n          to: unref(props).split && unref(props).splitTo ? unref(props).splitTo : void 0,\n          onClick: onSplitClick\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"button-content\", {}, () => [createTextVNode(toDisplayString(unref(props).text), 1)], true)]),\n          _: 3\n        }, 8, [\"id\", \"variant\", \"size\", \"class\", \"disabled\", \"type\", \"aria-label\", \"aria-expanded\", \"aria-haspopup\", \"href\", \"to\"]), unref(props).split ? (openBlock(), createBlock(_sfc_main$2, {\n          key: 0,\n          id: unref(computedId) + \"-split\",\n          ref_key: \"button\",\n          ref: button,\n          variant: unref(props).variant,\n          size: unref(props).size,\n          disabled: unref(props).disabled,\n          class: normalizeClass([[unref(props).toggleClass, {\n            show: unref(showRef)\n          }], \"dropdown-toggle-split dropdown-toggle\"]),\n          \"aria-expanded\": unref(showRef),\n          \"aria-haspopup\": \"menu\",\n          onClick: onButtonClick\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", _hoisted_1, [renderSlot(_ctx.$slots, \"toggle-text\", {}, () => [createTextVNode(toDisplayString(unref(props).toggleText), 1)], true)])]),\n          _: 3\n        }, 8, [\"id\", \"variant\", \"size\", \"disabled\", \"class\", \"aria-expanded\"])) : createCommentVNode(\"\", true), createVNode(_sfc_main$3, {\n          to: unref(props).teleportTo,\n          disabled: !unref(props).teleportTo || unref(props).teleportDisabled\n        }, {\n          default: withCtx(() => [unref(renderRef) || unref(contentShowing) ? (openBlock(), createBlock(Transition, mergeProps({\n            key: 0\n          }, unref(transitionProps), {\n            appear: modelValue.value\n          }), {\n            default: withCtx(() => [withDirectives(createElementVNode(\"ul\", {\n              id: unref(computedId) + \"-menu\",\n              ref_key: \"floating\",\n              ref: floating,\n              style: normalizeStyle([unref(floatingStyles), sizeStyles.value]),\n              class: normalizeClass([\"dropdown-menu overflow-auto\", [unref(props).menuClass, computedMenuClasses.value]]),\n              \"aria-labelledby\": unref(computedId),\n              role: unref(props).role,\n              onClick: onClickInside\n            }, [unref(contentShowing) ? renderSlot(_ctx.$slots, \"default\", {\n              key: 0,\n              hide: unref(hide),\n              show: unref(show),\n              visible: unref(showRef)\n            }, void 0, true) : createCommentVNode(\"\", true)], 14, _hoisted_2), [[vShow, unref(showRef)]])]),\n            _: 3\n          }, 16, [\"appear\"])) : createCommentVNode(\"\", true)]),\n          _: 3\n        }, 8, [\"to\", \"disabled\"])]),\n        _: 3\n      }, 8, [\"skip\", \"class\", \"role\"]);\n    };\n  }\n});\nconst BDropdown = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-337eb41c\"]]);\nexport { BDropdown as B };","map":{"version":3,"names":["_props","__props","props","useDefaults","emit","__emit","computedId","useId","id","modelValue","useModel","inInputGroup","inject","inputGroupKey","inButtonGroup","buttonGroupKey","computedOffset","computed","offset","NaN","offsetToNumber","useToNumber","floating","ref","button","splitButton","wrapper","boundary","isBoundary","rootBoundary","isRootBoundary","referencePlacement","split","value","showRef","renderRef","hide","show","toggle","computedNoAnimation","transitionProps","contentShowing","isVisible","useShowHide","computedMenuClasses","fade","onKeyStroke","_a","getElement","focus","target","keynav","e","v","_b","contains","closest","test","_c","tagName","preventDefault","loop","setInterval","clearInterval","nextTick","list","_d","querySelectorAll","_e","document","activeElement","active","querySelector","index","Array","prototype","indexOf","call","length","_f","_g","sizeStyles","floatingMiddleware","localOffset","arr","noFlip","push","flip","padding","boundaryPadding","noShift","shift","noSize","size","apply","availableWidth","availableHeight","maxHeight","scrollHeight","Math","max","maxWidth","scrollWidth","update","floatingStyles","useFloating","placement","middleware","strategy","toRef","whileElementsMounted","autoUpdate","inButtonGroupAttributes","class","role","computedClasses","wrapperClass","isNav","buttonClasses","splitClass","toggleClass","noCaret","onButtonClick","onSplitClick","event","onClickOutside","autoClose","ignore","onClickInside","watch","__expose","provide","dropdownInjectionKey","visible"],"sources":["../src/components/BDropdown/BDropdown.vue"],"sourcesContent":["<template>\n  <ConditionalWrapper\n    ref=\"wrapper\"\n    :skip=\"inInputGroup || props.noWrapper\"\n    :class=\"computedClasses\"\n    :role=\"inButtonGroupAttributes?.role\"\n  >\n    <BButton\n      :id=\"computedId\"\n      ref=\"splitButton\"\n      :variant=\"props.splitVariant || props.variant\"\n      :size=\"props.size\"\n      :class=\"buttonClasses\"\n      :disabled=\"props.splitDisabled || props.disabled\"\n      :type=\"props.splitButtonType\"\n      :aria-label=\"props.ariaLabel\"\n      :aria-expanded=\"props.split ? undefined : showRef\"\n      :aria-haspopup=\"props.split ? undefined : 'menu'\"\n      :href=\"props.split ? props.splitHref : undefined\"\n      :to=\"props.split && props.splitTo ? props.splitTo : undefined\"\n      @click=\"onSplitClick\"\n    >\n      <slot name=\"button-content\"> {{ props.text }} </slot>\n    </BButton>\n    <BButton\n      v-if=\"props.split\"\n      :id=\"computedId + '-split'\"\n      ref=\"button\"\n      :variant=\"props.variant\"\n      :size=\"props.size\"\n      :disabled=\"props.disabled\"\n      :class=\"[props.toggleClass, {show: showRef}]\"\n      class=\"dropdown-toggle-split dropdown-toggle\"\n      :aria-expanded=\"showRef\"\n      aria-haspopup=\"menu\"\n      @click=\"onButtonClick\"\n    >\n      <span class=\"visually-hidden\">\n        <slot name=\"toggle-text\">\n          {{ props.toggleText }}\n        </slot>\n      </span>\n    </BButton>\n    <ConditionalTeleport\n      :to=\"props.teleportTo\"\n      :disabled=\"!props.teleportTo || props.teleportDisabled\"\n    >\n      <Transition v-if=\"renderRef || contentShowing\" v-bind=\"transitionProps\" :appear=\"modelValue\">\n        <ul\n          v-show=\"showRef\"\n          :id=\"computedId + '-menu'\"\n          ref=\"floating\"\n          :style=\"[floatingStyles, sizeStyles]\"\n          class=\"dropdown-menu overflow-auto\"\n          :class=\"[props.menuClass, computedMenuClasses]\"\n          :aria-labelledby=\"computedId\"\n          :role=\"props.role\"\n          @click=\"onClickInside\"\n        >\n          <slot v-if=\"contentShowing\" :hide=\"hide\" :show=\"show\" :visible=\"showRef\" />\n        </ul>\n      </Transition>\n    </ConditionalTeleport>\n  </ConditionalWrapper>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  autoUpdate,\n  type Boundary,\n  flip,\n  type Middleware,\n  offset as offsetMiddleware,\n  type RootBoundary,\n  shift,\n  size as sizeMiddleware,\n  useFloating,\n} from '@floating-ui/vue'\nimport {onClickOutside, onKeyStroke, useToNumber} from '@vueuse/core'\nimport {\n  computed,\n  type CSSProperties,\n  type EmitFn,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  toRef,\n  watch,\n} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport type {BDropdownProps} from '../../types/ComponentProps'\nimport {BvTriggerableEvent} from '../../utils'\nimport BButton from '../BButton/BButton.vue'\nimport ConditionalWrapper from '../ConditionalWrapper.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {isBoundary, isRootBoundary} from '../../utils/floatingUi'\nimport {getElement} from '../../utils/getElement'\nimport {buttonGroupKey, dropdownInjectionKey, inputGroupKey} from '../../utils/keys'\nimport {useShowHide} from '../../composables/useShowHide'\n\nconst _props = withDefaults(defineProps<Omit<BDropdownProps, 'modelValue'>>(), {\n  ariaLabel: undefined,\n  autoClose: true,\n  boundary: 'clippingAncestors',\n  boundaryPadding: undefined,\n  teleportTo: undefined,\n  teleportDisabled: false,\n  disabled: false,\n  floatingMiddleware: undefined,\n  id: undefined,\n  initialAnimation: false,\n  isNav: false,\n  lazy: false,\n  menuClass: undefined,\n  noCaret: false,\n  noFade: false,\n  noFlip: false,\n  noShift: false,\n  noSize: false,\n  offset: 0,\n  unmountLazy: false,\n  role: 'menu',\n  size: 'md',\n  noWrapper: false,\n  split: false,\n  splitButtonType: 'button',\n  splitClass: undefined,\n  splitDisabled: undefined,\n  splitHref: undefined,\n  splitTo: undefined,\n  placement: 'bottom-start',\n  splitVariant: undefined,\n  strategy: 'absolute',\n  text: undefined,\n  show: false,\n  toggleClass: undefined,\n  toggleText: 'Toggle dropdown',\n  transProps: undefined,\n  variant: 'secondary',\n  visible: false,\n  wrapperClass: undefined,\n})\nconst props = useDefaults(_props, 'BDropdown')\n\nconst emit = defineEmits<{\n  'click': [event: MouseEvent]\n  'hidden': [value: BvTriggerableEvent]\n  'hide': [value: BvTriggerableEvent]\n  'hide-prevented': [value: BvTriggerableEvent]\n  'show': [value: BvTriggerableEvent]\n  'show-prevented': [value: BvTriggerableEvent]\n  'shown': [value: BvTriggerableEvent]\n  'toggle': [value: BvTriggerableEvent]\n  'toggle-prevented': [value: BvTriggerableEvent]\n}>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'button-content'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: {hide: () => void; show: () => void; visible: boolean}) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'toggle-text'?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'dropdown')\n\nconst modelValue = defineModel<Exclude<BDropdownProps['modelValue'], undefined>>({default: false})\n\nconst inInputGroup = inject(inputGroupKey, false)\nconst inButtonGroup = inject(buttonGroupKey, false)\n\nconst computedOffset = computed(() =>\n  typeof props.offset === 'string' || typeof props.offset === 'number' ? props.offset : NaN\n)\nconst offsetToNumber = useToNumber(computedOffset)\n\nconst floating = ref<HTMLElement | null>(null)\nconst button = ref<HTMLElement | null>(null)\nconst splitButton = ref<HTMLElement | null>(null)\nconst wrapper = ref<HTMLElement | null>(null)\n\nconst boundary = computed<Boundary | undefined>(() =>\n  isBoundary(props.boundary) ? props.boundary : undefined\n)\nconst rootBoundary = computed<RootBoundary | undefined>(() =>\n  isRootBoundary(props.boundary) ? props.boundary : undefined\n)\n\nconst referencePlacement = computed(() => (!props.split ? splitButton.value : button.value))\n\nconst {\n  showRef,\n  renderRef,\n  hide,\n  show,\n  toggle,\n  computedNoAnimation,\n  transitionProps,\n  contentShowing,\n  isVisible,\n} = useShowHide(modelValue, props, emit as EmitFn, referencePlacement, computedId)\n\nconst computedMenuClasses = computed(() => [\n  {\n    show: isVisible.value,\n    fade: !computedNoAnimation.value,\n  },\n])\n\nonKeyStroke(\n  'Escape',\n  () => {\n    hide()\n    getElement(referencePlacement.value)?.focus()\n  },\n  {target: referencePlacement}\n)\nonKeyStroke(\n  'Escape',\n  () => {\n    hide()\n    getElement(referencePlacement.value)?.focus()\n  },\n  {target: floating}\n)\n\nconst keynav = (e: Readonly<Event>, v: number) => {\n  if (floating.value?.contains((e.target as HTMLElement)?.closest('form'))) return\n  if (/input|select|option|textarea|form/i.test((e.target as HTMLElement)?.tagName)) return\n  e.preventDefault()\n  if (!showRef.value) {\n    show()\n    const loop = setInterval(() => {\n      if (isVisible.value) {\n        clearInterval(loop)\n        nextTick(() => keynav(e, v))\n      }\n    }, 16)\n    return\n  }\n  const list = floating.value?.querySelectorAll('.dropdown-item:not(.disabled):not(:disabled)')\n  if (!list) return\n  if (floating.value?.contains(document.activeElement)) {\n    const active = floating.value.querySelector('.dropdown-item:focus')\n    const index = Array.prototype.indexOf.call(list, active) + v\n    if (index >= 0 && index < list?.length) (list[index] as HTMLElement)?.focus()\n  } else {\n    ;(list[v === -1 ? list.length - 1 : 0] as HTMLElement)?.focus()\n  }\n}\n\nonKeyStroke('ArrowUp', (e) => keynav(e, -1), {target: referencePlacement})\nonKeyStroke('ArrowDown', (e) => keynav(e, 1), {target: referencePlacement})\nonKeyStroke('ArrowUp', (e) => keynav(e, -1), {target: floating})\nonKeyStroke('ArrowDown', (e) => keynav(e, 1), {target: floating})\n\nconst sizeStyles = ref<CSSProperties>({})\nconst floatingMiddleware = computed<Middleware[]>(() => {\n  if (props.floatingMiddleware !== undefined) {\n    return props.floatingMiddleware\n  }\n  const localOffset =\n    typeof props.offset === 'string' || typeof props.offset === 'number'\n      ? offsetToNumber.value\n      : props.offset\n  const arr: Middleware[] = [offsetMiddleware(localOffset)]\n  if (props.noFlip === false) {\n    arr.push(\n      flip({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n      })\n    )\n  }\n  if (props.noShift === false) {\n    arr.push(\n      shift({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n      })\n    )\n  }\n  if (props.noSize === false) {\n    arr.push(\n      sizeMiddleware({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n        apply({availableWidth, availableHeight}) {\n          sizeStyles.value = {\n            maxHeight:\n              availableHeight >= (floating.value?.scrollHeight ?? 0)\n                ? undefined\n                : availableHeight\n                  ? `${Math.max(0, availableHeight)}px`\n                  : undefined,\n            maxWidth:\n              availableWidth >= (floating.value?.scrollWidth ?? 0)\n                ? undefined\n                : availableWidth\n                  ? `${Math.max(0, availableWidth)}px`\n                  : undefined,\n          }\n        },\n      })\n    )\n  }\n  return arr\n})\nconst {update, floatingStyles} = useFloating(referencePlacement, floating, {\n  placement: () => props.placement,\n  middleware: floatingMiddleware,\n  strategy: toRef(() => props.strategy),\n  whileElementsMounted: autoUpdate,\n})\n\nconst inButtonGroupAttributes = inButtonGroup\n  ? {\n      class: 'btn-group',\n      role: 'group',\n    }\n  : undefined\n\nconst computedClasses = computed(() => [\n  inButtonGroupAttributes?.class,\n  props.wrapperClass,\n  {\n    'btn-group': !props.wrapperClass && props.split,\n    'dropdown': !props.wrapperClass && !props.split,\n    'position-static': props.boundary !== 'clippingAncestors' && !props.isNav,\n  },\n])\n\nconst buttonClasses = computed(() => [\n  props.split ? props.splitClass : props.toggleClass,\n  {\n    'nav-link': props.isNav,\n    'dropdown-toggle': !props.split,\n    'dropdown-toggle-no-caret': props.noCaret && !props.split,\n    'show': props.split ? undefined : showRef.value,\n  },\n])\n\nconst onButtonClick = () => {\n  toggle()\n}\n\nconst onSplitClick = (event: Readonly<MouseEvent>) => {\n  if (props.split) {\n    emit('click', event)\n    return\n  }\n  onButtonClick()\n}\n\nonClickOutside(\n  floating,\n  () => {\n    if (showRef.value && (props.autoClose === true || props.autoClose === 'outside')) {\n      hide()\n    }\n  },\n  {ignore: [button, splitButton]}\n)\nconst onClickInside = () => {\n  if (showRef.value && (props.autoClose === true || props.autoClose === 'inside')) {\n    hide()\n  }\n}\n\nwatch(isVisible, () => {\n  update()\n})\n\ndefineExpose({\n  hide,\n  show,\n  toggle,\n})\n\nprovide(dropdownInjectionKey, {\n  id: computedId,\n  show,\n  hide,\n  toggle,\n  visible: toRef(() => showRef.value),\n  isNav: toRef(() => props.isNav),\n})\n</script>\n<style lang=\"scss\" scoped>\n.dropdown-menu {\n  &.fade {\n    display: block;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}