{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { ref, computed, watch, readonly, toRef, onMounted, nextTick, useId, toValue as toValue$1, onUnmounted } from \"vue\";\nimport { d as unrefElement, b as useMutationObserver, n as useScrollLock$1 } from \"./index-BgXbxfV9.mjs\";\nimport { t as toValue, c as notNullish, b as tryOnScopeDispose, o as createSharedComposable } from \"./index-dpbv1toz.mjs\";\n/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = [\"input:not([inert])\", \"select:not([inert])\", \"textarea:not([inert])\", \"a[href]:not([inert])\", \"button:not([inert])\", \"[tabindex]:not(slot):not([inert])\", \"audio[controls]:not([inert])\", \"video[controls]:not([inert])\", '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', \"details>summary:first-of-type:not([inert])\", \"details:not([inert])\"];\nvar candidateSelector = /* @__PURE__ */candidateSelectors.join(\",\");\nvar NoElement = typeof Element === \"undefined\";\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\nvar isInert = function isInert2(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, \"inert\");\n  var inert = inertAtt === \"\" || inertAtt === \"true\";\n  var result = inert || lookUp && node && isInert2(node.parentNode);\n  return result;\n};\nvar isContentEditable = function isContentEditable2(node) {\n  var _node$getAttribute2;\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, \"contenteditable\");\n  return attValue === \"\" || attValue === \"true\";\n};\nvar getCandidates = function getCandidates2(el, includeContainer, filter) {\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\nvar getCandidatesIteratively = function getCandidatesIteratively2(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      continue;\n    }\n    if (element.tagName === \"SLOT\") {\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively2(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === \"function\" && options.getShadowRoot(element);\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        var _nestedCandidates = getCandidatesIteratively2(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\nvar hasTabIndex = function hasTabIndex2(node) {\n  return !isNaN(parseInt(node.getAttribute(\"tabindex\"), 10));\n};\nvar getTabIndex = function getTabIndex2(node) {\n  if (!node) {\n    throw new Error(\"No node provided\");\n  }\n  if (node.tabIndex < 0) {\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\nvar getSortOrderTabIndex = function getSortOrderTabIndex2(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables2(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput2(node) {\n  return node.tagName === \"INPUT\";\n};\nvar isHiddenInput = function isHiddenInput2(node) {\n  return isInput(node) && node.type === \"hidden\";\n};\nvar isDetailsWithSummary = function isDetailsWithSummary2(node) {\n  var r = node.tagName === \"DETAILS\" && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === \"SUMMARY\";\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio2(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio2(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios2(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== \"undefined\" && typeof window.CSS !== \"undefined\" && typeof window.CSS.escape === \"function\") {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      console.error(\"Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s\", err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio2(node) {\n  return isInput(node) && node.type === \"radio\";\n};\nvar isNonTabbableRadio = function isNonTabbableRadio2(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\nvar isNodeAttached = function isNodeAttached2(node) {\n  var _nodeRoot;\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea2(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden2(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  if (getComputedStyle(node).visibility === \"hidden\") {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, \"details>summary:first-of-type\");\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, \"details:not([open]) *\")) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === \"full\" || displayCheck === \"legacy-full\") {\n    if (typeof getShadowRoot === \"function\") {\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true) {\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          node = rootNode.host;\n        } else {\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    if (isNodeAttached(node)) {\n      return !node.getClientRects().length;\n    }\n    if (displayCheck !== \"legacy-full\") {\n      return true;\n    }\n  } else if (displayCheck === \"non-zero-area\") {\n    return isZeroArea(node);\n  }\n  return false;\n};\nvar isDisabledFromFieldset = function isDisabledFromFieldset2(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    while (parentNode) {\n      if (parentNode.tagName === \"FIELDSET\" && parentNode.disabled) {\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          if (child.tagName === \"LEGEND\") {\n            return matches.call(parentNode, \"fieldset[disabled] *\") ? true : !child.contains(node);\n          }\n        }\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable2(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable2(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable2(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute(\"tabindex\"), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  return false;\n};\nvar sortByOrder = function sortByOrder2(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder2(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item,\n        isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable2(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable2(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable2(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error(\"No node provided\");\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* @__PURE__ */candidateSelectors.concat(\"iframe\").join(\",\");\nvar isFocusable = function isFocusable2(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error(\"No node provided\");\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n/*!\n* focus-trap 7.6.2\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r2) {\n      return Object.getOwnPropertyDescriptor(e, r2).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), true).forEach(function (r2) {\n      _defineProperty(e, r2, t[r2]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r2) {\n      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));\n    });\n  }\n  return e;\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput2(node) {\n  return node.tagName && node.tagName.toLowerCase() === \"input\" && typeof node.select === \"function\";\n};\nvar isEscapeEvent = function isEscapeEvent2(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === \"Escape\" || (e === null || e === void 0 ? void 0 : e.key) === \"Esc\" || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent2(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === \"Tab\" || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\nvar isKeyForward = function isKeyForward2(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\nvar isKeyBackward = function isKeyBackward2(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay2(fn) {\n  return setTimeout(fn, 0);\n};\nvar valueOrHandler = function valueOrHandler2(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === \"function\" ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget2(event) {\n  return event.target.shadowRoot && typeof event.composedPath === \"function\" ? event.composedPath()[0] : event.target;\n};\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap2(elements, userOptions) {\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward,\n    isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: void 0,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: void 0\n  };\n  var trap;\n  var getOption = function getOption2(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== void 0 ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n  var findContainerIndex = function findContainerIndex2(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === \"function\" ? event.composedPath() : void 0;\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || (\n      // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n  var getNodeForOption = function getNodeForOption2(optionName) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},\n      _ref2$hasFallback = _ref2.hasFallback,\n      hasFallback = _ref2$hasFallback === void 0 ? false : _ref2$hasFallback,\n      _ref2$params = _ref2.params,\n      params = _ref2$params === void 0 ? [] : _ref2$params;\n    var optionValue = config[optionName];\n    if (typeof optionValue === \"function\") {\n      optionValue = optionValue.apply(void 0, _toConsumableArray(params));\n    }\n    if (optionValue === true) {\n      optionValue = void 0;\n    }\n    if (!optionValue) {\n      if (optionValue === void 0 || optionValue === false) {\n        return optionValue;\n      }\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue;\n    if (typeof optionValue === \"string\") {\n      try {\n        node = doc.querySelector(optionValue);\n      } catch (err) {\n        throw new Error(\"`\".concat(optionName, '` appears to be an invalid selector; error=\"').concat(err.message, '\"'));\n      }\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode2() {\n    var node = getNodeForOption(\"initialFocus\", {\n      hasFallback: true\n    });\n    if (node === false) {\n      return false;\n    }\n    if (node === void 0 || node && !isFocusable(node, config.tabbableOptions)) {\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n        node = firstTabbableNode || getNodeForOption(\"fallbackFocus\");\n      }\n    } else if (node === null) {\n      node = getNodeForOption(\"fallbackFocus\");\n    }\n    if (!node) {\n      throw new Error(\"Your focus-trap needs to have at least one focusable element\");\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes2() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : void 0;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : void 0;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption(\"fallbackFocus\")) {\n      throw new Error(\"Your focus-trap must have at least one container with at least one tabbable node in it at all times\");\n    }\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n  var _getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return _getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var _tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === _getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      _tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode2(previousActiveElement) {\n    var node = getNodeForOption(\"setReturnFocus\", {\n      params: [previousActiveElement]\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n  var findNextNavNode = function findNextNavNode2(_ref3) {\n    var target = _ref3.target,\n      event = _ref3.event,\n      _ref3$isBackward = _ref3.isBackward,\n      isBackward = _ref3$isBackward === void 0 ? false : _ref3$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : void 0;\n      if (containerIndex < 0) {\n        if (isBackward) {\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        var startOfGroupIndex = state.tabbableGroups.findIndex(function (_ref4) {\n          var firstTabbableNode = _ref4.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        var lastOfGroupIndex = state.tabbableGroups.findIndex(function (_ref5) {\n          var lastTabbableNode = _ref5.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      destinationNode = getNodeForOption(\"fallbackFocus\");\n    }\n    return destinationNode;\n  };\n  var checkPointerDown = function checkPointerDown2(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n  };\n  var checkFocusIn = function checkFocusIn2(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      event.stopImmediatePropagation();\n      var nextNode;\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n              }\n            }\n          }\n        } else {\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        _tryFocus(nextNode);\n      } else {\n        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = void 0;\n  };\n  var checkKeyNav = function checkKeyNav2(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event,\n      isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        event.preventDefault();\n      }\n      _tryFocus(destinationNode);\n    }\n  };\n  var checkTabKey = function checkTabKey2(event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n  var checkEscapeKey = function checkEscapeKey2(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n  var checkClick = function checkClick2(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n  var addListeners = function addListeners2() {\n    if (!state.active) {\n      return;\n    }\n    activeFocusTraps.activateTrap(trapStack, trap);\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      _tryFocus(getInitialFocusNode());\n    }) : _tryFocus(getInitialFocusNode());\n    doc.addEventListener(\"focusin\", checkFocusIn, true);\n    doc.addEventListener(\"mousedown\", checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener(\"touchstart\", checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener(\"click\", checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener(\"keydown\", checkTabKey, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener(\"keydown\", checkEscapeKey);\n    return trap;\n  };\n  var removeListeners = function removeListeners2() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener(\"focusin\", checkFocusIn, true);\n    doc.removeEventListener(\"mousedown\", checkPointerDown, true);\n    doc.removeEventListener(\"touchstart\", checkPointerDown, true);\n    doc.removeEventListener(\"click\", checkClick, true);\n    doc.removeEventListener(\"keydown\", checkTabKey, true);\n    doc.removeEventListener(\"keydown\", checkEscapeKey);\n    return trap;\n  };\n  var checkDomRemoval = function checkDomRemoval2(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n    if (isFocusedNodeRemoved) {\n      _tryFocus(getInitialFocusNode());\n    }\n  };\n  var mutationObserver = typeof window !== \"undefined\" && \"MutationObserver\" in window ? new MutationObserver(checkDomRemoval) : void 0;\n  var updateObservedNodes = function updateObservedNodes2() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, \"onActivate\");\n      var onPostActivate = getOption(activateOptions, \"onPostActivate\");\n      var checkCanFocusTrap = getOption(activateOptions, \"checkCanFocusTrap\");\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 || onActivate();\n      var finishActivation = function finishActivation2() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer);\n      state.delayInitialFocusTimer = void 0;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, \"onDeactivate\");\n      var onPostDeactivate = getOption(options, \"onPostDeactivate\");\n      var checkCanReturnFocus = getOption(options, \"checkCanReturnFocus\");\n      var returnFocus = getOption(options, \"returnFocus\", \"returnFocusOnDeactivate\");\n      onDeactivate === null || onDeactivate === void 0 || onDeactivate();\n      var finishDeactivation = function finishDeactivation2() {\n        delay(function () {\n          if (returnFocus) {\n            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, \"onPause\");\n      var onPostPause = getOption(pauseOptions, \"onPostPause\");\n      state.paused = true;\n      onPause === null || onPause === void 0 || onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 || onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, \"onUnpause\");\n      var onPostUnpause = getOption(unpauseOptions, \"onPostUnpause\");\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 || onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === \"string\" ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n  trap.updateContainerElements(elements);\n  return trap;\n};\nfunction useFocusTrap(target, options = {}) {\n  let trap;\n  const {\n    immediate,\n    ...focusTrapOptions\n  } = options;\n  const hasFocus = ref(false);\n  const isPaused = ref(false);\n  const activate = opts => trap && trap.activate(opts);\n  const deactivate = opts => trap && trap.deactivate(opts);\n  const pause = () => {\n    if (trap) {\n      trap.pause();\n      isPaused.value = true;\n    }\n  };\n  const unpause = () => {\n    if (trap) {\n      trap.unpause();\n      isPaused.value = false;\n    }\n  };\n  const targets = computed(() => {\n    const _targets = toValue(target);\n    return (Array.isArray(_targets) ? _targets : [_targets]).map(el => {\n      const _el = toValue(el);\n      return typeof _el === \"string\" ? _el : unrefElement(_el);\n    }).filter(notNullish);\n  });\n  watch(targets, els => {\n    if (!els.length) return;\n    trap = createFocusTrap(els, {\n      ...focusTrapOptions,\n      onActivate() {\n        hasFocus.value = true;\n        if (options.onActivate) options.onActivate();\n      },\n      onDeactivate() {\n        hasFocus.value = false;\n        if (options.onDeactivate) options.onDeactivate();\n      }\n    });\n    if (immediate) activate();\n  }, {\n    flush: \"post\"\n  });\n  tryOnScopeDispose(() => deactivate());\n  return {\n    hasFocus,\n    isPaused,\n    activate,\n    deactivate,\n    pause,\n    unpause\n  };\n}\nconst useActivatedFocusTrap = ({\n  element,\n  isActive,\n  noTrap,\n  fallbackFocus\n}, focusTrapOpts = {\n  allowOutsideClick: true,\n  fallbackFocus: fallbackFocus.ref.value ?? void 0,\n  escapeDeactivates: false\n}) => {\n  const resolvedIsActive = readonly(toRef(isActive));\n  const resolvedNoTrap = readonly(toRef(noTrap));\n  const checkNeedsFocus = () => {\n    var _a;\n    const tabbableElements = (_a = element.value) == null ? void 0 : _a.querySelectorAll(`a, button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"]):not(.${fallbackFocus.classSelector})`);\n    return !tabbableElements || tabbableElements.length === 0;\n  };\n  const needsFallback = ref(checkNeedsFocus());\n  onMounted(() => {\n    useMutationObserver(element, () => {\n      needsFallback.value = checkNeedsFocus();\n    }, {\n      childList: true,\n      subtree: true\n    });\n  });\n  const trap = useFocusTrap(element, focusTrapOpts);\n  watch(resolvedIsActive, async newValue => {\n    await nextTick();\n    if (newValue && resolvedNoTrap.value === false) {\n      trap.activate();\n    } else {\n      trap.deactivate();\n    }\n  });\n  watch(resolvedNoTrap, newValue => {\n    if (newValue === true) {\n      trap.deactivate();\n    }\n  });\n  return {\n    needsFallback: readonly(needsFallback)\n  };\n};\nconst useScrollLock = createSharedComposable(useScrollLock$1);\nlet prevousRightPadding = \"\";\nconst lockRegistry = /* @__PURE__ */new Map();\nconst useSafeScrollLock = (isOpen, bodyScroll) => {\n  const resolvedIsOpen = readonly(toRef(isOpen));\n  const id = useId();\n  const inverseBodyScrollingValue = computed(() => !toValue$1(bodyScroll));\n  const isLocked = useScrollLock(typeof document !== \"undefined\" ? document.body : null, resolvedIsOpen.value && inverseBodyScrollingValue.value);\n  onMounted(() => {\n    if (typeof document === \"undefined\") return;\n    lockRegistry.set(id, false);\n    watch([resolvedIsOpen, inverseBodyScrollingValue], ([modelVal, bodyVal]) => {\n      const scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n      const hasLocked = Array.from(lockRegistry.values()).some(val => val === true);\n      const myLocked = modelVal && bodyVal;\n      lockRegistry.set(id, myLocked);\n      if (myLocked && !hasLocked && !isLocked.value) {\n        isLocked.value = true;\n        if (scrollBarGap > 0) {\n          prevousRightPadding = document.body.style.paddingRight;\n          document.body.style.paddingRight = `${scrollBarGap + prevousRightPadding}px`;\n        }\n      }\n      const hasLockedAfter = Array.from(lockRegistry.values()).some(val => val === true);\n      if (hasLocked && !hasLockedAfter) {\n        lockRegistry.set(id, false);\n        isLocked.value = false;\n        document.body.style.paddingRight = prevousRightPadding;\n      }\n    }, {\n      immediate: true\n    });\n  });\n  onUnmounted(() => {\n    lockRegistry.delete(id);\n    const hasLockedAfter = Array.from(lockRegistry.values()).some(val => val === true);\n    if (!hasLockedAfter) {\n      document.body.style.paddingRight = prevousRightPadding;\n      isLocked.value = false;\n    }\n  });\n};\nexport { useActivatedFocusTrap as a, useSafeScrollLock as u };","map":{"version":3,"names":["candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","_element$getRootNode","call","ownerDocument","isInert","isInert2","node","lookUp","_node$getAttribute","inertAtt","getAttribute","inert","result","parentNode","isContentEditable","isContentEditable2","_node$getAttribute2","attValue","getCandidates","getCandidates2","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","unshift","getCandidatesIteratively","getCandidatesIteratively2","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","content","children","nestedCandidates","flatten","push","scopeParent","validCandidate","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","hasTabIndex","hasTabIndex2","isNaN","parseInt","getTabIndex","getTabIndex2","Error","tabIndex","test","getSortOrderTabIndex","getSortOrderTabIndex2","isScope","sortOrderedTabbables","sortOrderedTabbables2","a","b","documentOrder","isInput","isInput2","isHiddenInput","isHiddenInput2","type","isDetailsWithSummary","isDetailsWithSummary2","r","some","child","getCheckedRadio","getCheckedRadio2","nodes","form","i","checked","isTabbableRadio","isTabbableRadio2","name","radioScope","queryRadios","queryRadios2","radioSet","window","CSS","escape","err","console","error","message","isRadio","isRadio2","isNonTabbableRadio","isNonTabbableRadio2","isNodeAttached","isNodeAttached2","_nodeRoot","nodeRoot","nodeRootHost","host","attached","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","contains","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isZeroArea","isZeroArea2","_node$getBoundingClie","getBoundingClientRect","width","height","isHidden","isHidden2","_ref","displayCheck","getComputedStyle","visibility","isDirectSummary","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","getClientRects","isDisabledFromFieldset","isDisabledFromFieldset2","disabled","item","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorFocusable2","isNodeMatchingSelectorTabbable","isNodeMatchingSelectorTabbable2","isValidShadowRootTabbable","isValidShadowRootTabbable2","shadowHostNode","sortByOrder","sortByOrder2","regularTabbables","orderedTabbables","forEach","candidateTabindex","sort","reduce","acc","sortable","concat","tabbable","tabbable2","container","bind","focusable","focusable2","isTabbable","isTabbable2","focusableCandidateSelector","isFocusable","isFocusable2","_arrayLikeToArray","e","n","_arrayWithoutHoles","isArray","_defineProperty","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","_iterableToArray","Symbol","iterator","_nonIterableSpread","TypeError","ownKeys","keys","getOwnPropertySymbols","o","r2","getOwnPropertyDescriptor","_objectSpread2","arguments","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","_unsupportedIterableToArray","_toPrimitive","toPrimitive","String","Number","toString","constructor","activeFocusTraps","activateTrap","trapStack","trap","activeTrap","pause","trapIndex","indexOf","splice","deactivateTrap","unpause","isSelectableInput","isSelectableInput2","toLowerCase","select","isEscapeEvent","isEscapeEvent2","key","keyCode","isTabEvent","isTabEvent2","isKeyForward","isKeyForward2","shiftKey","isKeyBackward","isKeyBackward2","delay","delay2","fn","setTimeout","valueOrHandler","valueOrHandler2","_len","params","_key","getActualTarget","getActualTarget2","event","target","composedPath","internalTrapStack","createFocusTrap","createFocusTrap2","userOptions","doc","document","config","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","recentNavEvent","getOption","getOption2","configOverrideOptions","optionName","configOptionName","findContainerIndex","findContainerIndex2","findIndex","tabbableNodes","find","getNodeForOption","getNodeForOption2","_ref2","_ref2$hasFallback","hasFallback","_ref2$params","optionValue","querySelector","getInitialFocusNode","getInitialFocusNode2","tabbableOptions","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","updateTabbableNodes2","map","focusableNodes","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","reverse","posTabIndexesFound","nextTabbableNode","forward","nodeIdx","group","g","_getActiveElement","getActiveElement","_tryFocus","tryFocus","focus","preventScroll","getReturnFocusNode","getReturnFocusNode2","previousActiveElement","findNextNavNode","findNextNavNode2","_ref3","_ref3$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref4","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref5","_destinationGroupIndex","_destinationGroup","checkPointerDown","checkPointerDown2","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","checkFocusIn2","targetContained","Document","stopImmediatePropagation","nextNode","navAcrossContainers","mruContainerIdx","mruTabIdx","checkKeyNav","checkKeyNav2","checkTabKey","checkTabKey2","checkEscapeKey","checkEscapeKey2","checkClick","checkClick2","addListeners","addListeners2","addEventListener","capture","passive","removeListeners","removeListeners2","removeEventListener","checkDomRemoval","checkDomRemoval2","mutations","isFocusedNodeRemoved","mutation","removedNodes","mutationObserver","MutationObserver","updateObservedNodes","updateObservedNodes2","disconnect","observe","subtree","childList","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","finishActivation2","then","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","finishDeactivation2","pauseOptions","onPause","onPostPause","unpauseOptions","onUnpause","onPostUnpause","updateContainerElements","containerElements","elementsAsArray","Boolean","useFocusTrap","immediate","focusTrapOptions","hasFocus","ref","isPaused","opts","targets","computed","_targets","toValue","_el","unrefElement","notNullish","watch","els","flush","tryOnScopeDispose","useActivatedFocusTrap","isActive","noTrap","fallbackFocus","focusTrapOpts","resolvedIsActive","readonly","toRef","resolvedNoTrap","checkNeedsFocus","tabbableElements","_a","classSelector","needsFallback","onMounted","useMutationObserver","newValue","nextTick","useScrollLock","createSharedComposable","useScrollLock$1","prevousRightPadding","lockRegistry","Map","useSafeScrollLock","isOpen","bodyScroll","resolvedIsOpen","id","useId","inverseBodyScrollingValue","toValue$1","isLocked","body","set","modelVal","bodyVal","scrollBarGap","innerWidth","documentElement","clientWidth","hasLocked","values","val","myLocked","style","paddingRight","hasLockedAfter","onUnmounted","delete"],"sources":["../../../node_modules/.pnpm/tabbable@6.2.0/node_modules/tabbable/dist/index.esm.js","../../../node_modules/.pnpm/focus-trap@7.6.2/node_modules/focus-trap/dist/focus-trap.esm.js","../../../node_modules/.pnpm/@vueuse+integrations@11.2.0_change-case@5.4.4_focus-trap@7.6.2_vue@3.5.13_typescript@5.6.3_/node_modules/@vueuse/integrations/useFocusTrap.mjs","../src/composables/useActivatedFocusTrap.ts","../src/composables/useScrollLock.ts","../src/composables/useSafeScrollLock.ts"],"sourcesContent":["/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.6.2\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { isFocusable, tabbable, focusable, isTabbable, getTabIndex } from 'tabbable';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || (// fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$hasFallback = _ref2.hasFallback,\n      hasFallback = _ref2$hasFallback === void 0 ? false : _ref2$hasFallback,\n      _ref2$params = _ref2.params,\n      params = _ref2$params === void 0 ? [] : _ref2$params;\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue.apply(void 0, _toConsumableArray(params));\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\"`\".concat(optionName, \"` appears to be an invalid selector; error=\\\"\").concat(err.message, \"\\\"\"));\n      }\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus', {\n      hasFallback: true\n    });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || node && !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var _getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return _getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var _tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === _getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      _tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement]\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref3) {\n    var target = _ref3.target,\n      event = _ref3.event,\n      _ref3$isBackward = _ref3.isBackward,\n      isBackward = _ref3$isBackward === void 0 ? false : _ref3$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = state.tabbableGroups.findIndex(function (_ref4) {\n          var firstTabbableNode = _ref4.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = state.tabbableGroups.findIndex(function (_ref5) {\n          var lastTabbableNode = _ref5.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        _tryFocus(nextNode);\n      } else {\n        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      _tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n  var checkTabKey = function checkTabKey(event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  var checkEscapeKey = function checkEscapeKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      _tryFocus(getInitialFocusNode());\n    }) : _tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      _tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 || onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 || onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 || onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","import { unrefElement, tryOnScopeDispose } from '@vueuse/core';\nimport { toValue, notNullish } from '@vueuse/shared';\nimport { createFocusTrap } from 'focus-trap';\nimport { ref, computed, watch } from 'vue-demi';\n\nfunction useFocusTrap(target, options = {}) {\n  let trap;\n  const { immediate, ...focusTrapOptions } = options;\n  const hasFocus = ref(false);\n  const isPaused = ref(false);\n  const activate = (opts) => trap && trap.activate(opts);\n  const deactivate = (opts) => trap && trap.deactivate(opts);\n  const pause = () => {\n    if (trap) {\n      trap.pause();\n      isPaused.value = true;\n    }\n  };\n  const unpause = () => {\n    if (trap) {\n      trap.unpause();\n      isPaused.value = false;\n    }\n  };\n  const targets = computed(() => {\n    const _targets = toValue(target);\n    return (Array.isArray(_targets) ? _targets : [_targets]).map((el) => {\n      const _el = toValue(el);\n      return typeof _el === \"string\" ? _el : unrefElement(_el);\n    }).filter(notNullish);\n  });\n  watch(\n    targets,\n    (els) => {\n      if (!els.length)\n        return;\n      trap = createFocusTrap(els, {\n        ...focusTrapOptions,\n        onActivate() {\n          hasFocus.value = true;\n          if (options.onActivate)\n            options.onActivate();\n        },\n        onDeactivate() {\n          hasFocus.value = false;\n          if (options.onDeactivate)\n            options.onDeactivate();\n        }\n      });\n      if (immediate)\n        activate();\n    },\n    { flush: \"post\" }\n  );\n  tryOnScopeDispose(() => deactivate());\n  return {\n    hasFocus,\n    isPaused,\n    activate,\n    deactivate,\n    pause,\n    unpause\n  };\n}\n\nexport { useFocusTrap };\n","import {\n  type MaybeRefOrGetter,\n  nextTick,\n  onMounted,\n  readonly,\n  ref,\n  type Ref,\n  toRef,\n  watch,\n} from 'vue'\nimport {useFocusTrap, type UseFocusTrapOptions} from '@vueuse/integrations/useFocusTrap'\nimport {useMutationObserver} from '@vueuse/core'\n\nexport const useActivatedFocusTrap = (\n  {\n    element,\n    isActive,\n    noTrap,\n    fallbackFocus,\n  }: {\n    element: Ref<HTMLElement | null>\n    isActive: MaybeRefOrGetter<boolean>\n    noTrap: MaybeRefOrGetter<boolean>\n    /**\n     * We need this in the case when there are no focusable elements in the trap. So elements that use this need to implement a fallback focus element.\n     *\n     * Use the `needsFallback` ref to check if you can v-if the element or not. So it's not included in the component tree when not needed.\n     */\n    fallbackFocus: {\n      ref: Ref<HTMLElement | null>\n      /**\n       * The fallback focus element needs some specific selector to ensure it's not included when checking for focusable elements\n       */\n      classSelector: string\n    }\n  },\n  focusTrapOpts: UseFocusTrapOptions = {\n    allowOutsideClick: true,\n    fallbackFocus: fallbackFocus.ref.value ?? undefined,\n    escapeDeactivates: false,\n  }\n) => {\n  const resolvedIsActive = readonly(toRef(isActive))\n  const resolvedNoTrap = readonly(toRef(noTrap))\n\n  const checkNeedsFocus = () => {\n    const tabbableElements = element.value?.querySelectorAll(\n      `a, button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"]):not(.${fallbackFocus.classSelector})`\n    )\n    return !tabbableElements || tabbableElements.length === 0\n  }\n  const needsFallback = ref(checkNeedsFocus())\n  onMounted(() => {\n    useMutationObserver(\n      element,\n      () => {\n        needsFallback.value = checkNeedsFocus()\n      },\n      {childList: true, subtree: true}\n    )\n  })\n\n  const trap = useFocusTrap(element, focusTrapOpts)\n  watch(resolvedIsActive, async (newValue) => {\n    await nextTick()\n    if (newValue && resolvedNoTrap.value === false) {\n      trap.activate()\n    } else {\n      trap.deactivate()\n    }\n  })\n\n  watch(resolvedNoTrap, (newValue) => {\n    if (newValue === true) {\n      trap.deactivate()\n    }\n  })\n\n  return {\n    needsFallback: readonly(needsFallback),\n  }\n}\n","import {useScrollLock as _useScrollLock, createSharedComposable} from '@vueuse/core'\n\nexport const useScrollLock = createSharedComposable(_useScrollLock)\n","import {\n  computed,\n  type MaybeRefOrGetter,\n  onMounted,\n  onUnmounted,\n  readonly,\n  toRef,\n  toValue,\n  useId,\n  watch,\n} from 'vue'\nimport {useScrollLock} from './useScrollLock'\n\nlet prevousRightPadding = ''\nconst lockRegistry = new Map()\n\nexport const useSafeScrollLock = (\n  isOpen: MaybeRefOrGetter<boolean>,\n  bodyScroll: MaybeRefOrGetter<boolean>\n) => {\n  const resolvedIsOpen = readonly(toRef(isOpen))\n  const id = useId()\n\n  /**\n   * We use the inverse because bodyScrolling === true means we allow scrolling, while bodyScrolling === false means we disallow\n   */\n  const inverseBodyScrollingValue = computed(() => !toValue(bodyScroll))\n\n  const isLocked = useScrollLock(\n    typeof document !== 'undefined' ? document.body : null,\n    resolvedIsOpen.value && inverseBodyScrollingValue.value\n  )\n  onMounted(() => {\n    if (typeof document === 'undefined') return\n    lockRegistry.set(id, false)\n\n    watch(\n      [resolvedIsOpen, inverseBodyScrollingValue],\n      ([modelVal, bodyVal]) => {\n        const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n        const hasLocked = Array.from(lockRegistry.values()).some((val) => val === true)\n\n        const myLocked = modelVal && bodyVal\n        lockRegistry.set(id, myLocked)\n\n        if (myLocked && !hasLocked && !isLocked.value) {\n          isLocked.value = true\n          if (scrollBarGap > 0) {\n            prevousRightPadding = document.body.style.paddingRight\n            document.body.style.paddingRight = `${scrollBarGap + prevousRightPadding}px`\n          }\n        }\n        const hasLockedAfter = Array.from(lockRegistry.values()).some((val) => val === true)\n\n        if (hasLocked && !hasLockedAfter) {\n          lockRegistry.set(id, false)\n          isLocked.value = false\n          document.body.style.paddingRight = prevousRightPadding\n        }\n      },\n      {immediate: true}\n    )\n  })\n  onUnmounted(() => {\n    lockRegistry.delete(id)\n\n    const hasLockedAfter = Array.from(lockRegistry.values()).some((val) => val === true)\n    if (!hasLockedAfter) {\n      document.body.style.paddingRight = prevousRightPadding\n      isLocked.value = false\n    }\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}